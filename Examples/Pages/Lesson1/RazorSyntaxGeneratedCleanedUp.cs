#pragma checksum "/Users/joris/Dev/WebdevCourseRazorPages/Examples/Pages/Lesson1/RazorSyntax.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5914bbc60c13286a7e9dcfb4ad7f1ca73b44656f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Examples.Pages.Lesson1.Pages_Lesson1_RazorSyntaxGenerated), @"mvc.1.0.razor-page", @"/Pages/Lesson1/RazorSyntax.cshtml")]
namespace Examples.Pages.Lesson1
{
    using System;

    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5914bbc60c13286a7e9dcfb4ad7f1ca73b44656f", @"/Pages/Lesson1/RazorSyntax.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f57a372ae2d3151e55762fcdd3dc3b6eb1062ccf", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Lesson1_RazorSyntaxGenerated : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n\n\n<h2>Implicit Razor expressions</h2>\n\n<p>Current DateTime: ");

            Write(DateTime.Now);


            WriteLiteral("</p>\n<p>IsLeapYear(2016): ");

            Write(DateTime.IsLeapYear(2016));


            WriteLiteral("</p>\n\n<hr>\n\n<h2>Explicit Razor expressions</h2>\n<p>Tomorrow ");

            Write(DateTime.Now - TimeSpan.FromDays(1));


            WriteLiteral("</p>\n\n<hr/>\n\n<h2>Code Block</h2>\n\n");

            var x = "Hello World";


            WriteLiteral("<p>");

            Write(x);


            WriteLiteral("</p>\n");

            x = "Goodbye";


            WriteLiteral("<p>");

            Write(x);


            WriteLiteral("</p>\n<hr/>\n\n<p>Last week this time: ");

            Write(DateTime.Now - TimeSpan.FromDays(7));


            WriteLiteral("</p>\n\n");

            var joe = new Person("Joe", 33);


            WriteLiteral("\n<p>Age");

            Write(joe.Age);


            WriteLiteral("</p>\n<hr/>\n\n");

            RenderItem("Item 1");


            WriteLiteral("\n");

            for(int i = 1; i < 3; i++)
            {
                RenderItem("Item " +i);
            }


            WriteLiteral("\n<br>\n<h2>Transitions (from HTML to C# and back)</h2>\n");

            var inCSharp = true;

            WriteLiteral("    <p>Now in HTML, was in C# ");

            Write(inCSharp);

            WriteLiteral("</p>\n");
            WriteLiteral("\n");

            var people = new Person[]
            {
                new Person("Joris", 30),
                new Person("Martin", 40),
                new Person("Jos", 50)
            };


            WriteLiteral("\n\n");

            for (var i = 0; i < people.Length; i++)
            {
                var person = people[i];
                WriteLiteral("    <p>Name: ");
                Write(person.Name);
                WriteLiteral("</p>\n");
            }

            WriteLiteral("\n<hr>\n<h2>Control Structures & looping (if, else, switch, for, foreach, etc)</h2>\n\n");

            foreach (var person in people)
            {
                if (person.Name.StartsWith("J"))
                {


                    WriteLiteral("        <p><b>");

                    Write(person.Name);
                    WriteLiteral("</b></p>\n");
                }
                else
                {
                    WriteLiteral("        <p>");

                    Write(person.Name);
                    WriteLiteral("</p>\n");
                }
            }


            WriteLiteral("\n\n");
            WriteLiteral("\n");
        }
        #pragma warning restore 1998

        public class Person
        {
            public int Age { get; set; }
            public string Name { get; set; }

            public Person(string name, int age)
            {
                Name = name;
                Age = age;
            }
        }

        public string DisplayPerson(Person p)
        {
            return $"{p.Name} -- {p.Age}";
        }

        void RenderItem(string item) {
            WriteLiteral("        <li>");
            Write(item);
            WriteLiteral("</li>\n");

        }


        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_Lesson1_RazorSyntaxGenerated> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Lesson1_RazorSyntaxGenerated> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Lesson1_RazorSyntaxGenerated>)PageContext?.ViewData;
        public Pages_Lesson1_RazorSyntaxGenerated Model => ViewData.Model;
    }
}
#pragma warning restore 1591
